import {
  _,
  addDays,
  config,
  createPlugin,
  isValidDate,
  y
} from "./chunk-QXEJWH2N.js";

// node_modules/@fullcalendar/premium-common/index.js
var UPGRADE_WINDOW = 365 + 7;
var INVALID_LICENSE_URL = "https://fullcalendar.io/docs/schedulerLicenseKey#invalid";
var OUTDATED_LICENSE_URL = "https://fullcalendar.io/docs/schedulerLicenseKey#outdated";
var PRESET_LICENSE_KEYS = [
  "GPL-My-Project-Is-Open-Source",
  "CC-Attribution-NonCommercial-NoDerivatives"
];
var CSS = {
  position: "absolute",
  zIndex: 99999,
  bottom: "1px",
  left: "1px",
  background: "#eee",
  borderColor: "#ddd",
  borderStyle: "solid",
  borderWidth: "1px 1px 0 0",
  padding: "2px 4px",
  fontSize: "12px",
  borderTopRightRadius: "3px"
};
function buildLicenseWarning(context) {
  let key = context.options.schedulerLicenseKey;
  let currentUrl = typeof window !== "undefined" ? window.location.href : "";
  if (!isImmuneUrl(currentUrl)) {
    let status = processLicenseKey(key, context.pluginHooks.premiumReleaseDate);
    if (status !== "valid") {
      return y("div", { className: "fc-license-message", style: CSS }, status === "outdated" ? y(
        _,
        null,
        "Your license key is too old to work with this version. ",
        y("a", { href: OUTDATED_LICENSE_URL }, "More Info")
      ) : y(
        _,
        null,
        "Your license key is invalid. ",
        y("a", { href: INVALID_LICENSE_URL }, "More Info")
      ));
    }
  }
  return null;
}
function processLicenseKey(key, premiumReleaseDate) {
  if (PRESET_LICENSE_KEYS.indexOf(key) !== -1) {
    return "valid";
  }
  const parts = (key || "").match(/^(\d+)-fcs-(\d+)$/);
  if (parts && parts[1].length === 10) {
    const purchaseDate = new Date(parseInt(parts[2], 10) * 1e3);
    const releaseDate = config.mockSchedulerReleaseDate || premiumReleaseDate;
    if (isValidDate(releaseDate)) {
      const minPurchaseDate = addDays(releaseDate, -UPGRADE_WINDOW);
      if (minPurchaseDate < purchaseDate) {
        return "valid";
      }
      return "outdated";
    }
  }
  return "invalid";
}
function isImmuneUrl(url) {
  return /\w+:\/\/fullcalendar\.io\/|\/examples\/[\w-]+\.html$/.test(url);
}
var OPTION_REFINERS = {
  schedulerLicenseKey: String
};
var index = createPlugin({
  name: "@fullcalendar/premium-common",
  premiumReleaseDate: "2024-07-12",
  optionRefiners: OPTION_REFINERS,
  viewContainerAppends: [buildLicenseWarning]
});

export {
  index
};
//# sourceMappingURL=chunk-XT3PLC24.js.map
