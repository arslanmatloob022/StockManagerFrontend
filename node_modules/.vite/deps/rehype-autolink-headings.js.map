{
  "version": 3,
  "sources": ["../../rehype-autolink-headings/lib/index.js"],
  "sourcesContent": ["/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast-util-is-element').Test} Test\n *\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\n *\n * @callback Build\n * @param {Element} node\n * @returns {ElementChild|ElementChild[]}\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior} [behavior='prepend']\n *   How to create links.\n * @property {Behavior} [behaviour]\n *   Please use `behavior` instead\n * @property {Properties} [properties]\n *   Extra properties to set on the link when injecting.\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\n *   `'append'`.\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\n *   hast nodes to insert in the link.\n * @property {ElementChild|ElementChild[]|Build} [group]\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\n *   `'after'`.\n *   There is no default.\n * @property {Test} [test]\n *   Test to define which heading elements are linked.\n *   Any test that can be given to `hast-util-is-element` is supported.\n *   The default (no test) is to link all headings.\n *   Can be used to link only h1-h3, or for example all except h1.\n */\n\nimport extend from 'extend'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {visit, SKIP} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/**\n * Plugin to automatically add links to headings (h1-h6).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeAutolinkHeadings(options = {}) {\n  let props = options.properties\n  const behavior = options.behaviour || options.behavior || 'prepend'\n  const content = options.content || contentDefaults\n  const group = options.group\n  const is = convertElement(options.test)\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  let method\n\n  if (behavior === 'wrap') {\n    method = wrap\n  } else if (behavior === 'before' || behavior === 'after') {\n    method = around\n  } else {\n    if (!props) {\n      props = {ariaHidden: 'true', tabIndex: -1}\n    }\n\n    method = inject\n  }\n\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (\n        headingRank(node) &&\n        hasProperty(node, 'id') &&\n        is(node, index, parent)\n      ) {\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function inject(node) {\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, extend(true, {}, props), toChildren(content, node))\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function around(node, index, parent) {\n    // Uncommon.\n    /* c8 ignore next */\n    if (typeof index !== 'number' || !parent) return\n\n    const link = create(\n      node,\n      extend(true, {}, props),\n      toChildren(content, node)\n    )\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function wrap(node) {\n    node.children = [create(node, extend(true, {}, props), node.children)]\n    return [SKIP]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild[]}\n   */\n  function toChildren(value, node) {\n    const result = toNode(value, node)\n    return Array.isArray(result) ? result : [result]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild|ElementChild[]}\n   */\n  function toNode(value, node) {\n    if (typeof value === 'function') return value(node)\n    return extend(true, Array.isArray(value) ? [] : {}, value)\n  }\n\n  /**\n   * @param {Element} node\n   * @param {Properties} props\n   * @param {ElementChild[]} children\n   * @returns {Element}\n   */\n  function create(node, props, children) {\n    return {\n      type: 'element',\n      tagName: 'a',\n      properties: Object.assign({}, props, {\n        // Fix hast types and make them required.\n        /* c8 ignore next */\n        href: '#' + (node.properties || {}).id\n      }),\n      children\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAqCA,oBAAmB;AAOnB,IAAM,kBAAkB;AAAA,EACtB,MAAM;AAAA,EACN,SAAS;AAAA,EACT,YAAY,EAAC,WAAW,CAAC,QAAQ,WAAW,EAAC;AAAA,EAC7C,UAAU,CAAC;AACb;AAOe,SAAR,uBAAwC,UAAU,CAAC,GAAG;AAC3D,MAAI,QAAQ,QAAQ;AACpB,QAAM,WAAW,QAAQ,aAAa,QAAQ,YAAY;AAC1D,QAAM,UAAU,QAAQ,WAAW;AACnC,QAAM,QAAQ,QAAQ;AACtB,QAAM,KAAK,eAAe,QAAQ,IAAI;AAGtC,MAAI;AAEJ,MAAI,aAAa,QAAQ;AACvB,aAAS;AAAA,EACX,WAAW,aAAa,YAAY,aAAa,SAAS;AACxD,aAAS;AAAA,EACX,OAAO;AACL,QAAI,CAAC,OAAO;AACV,cAAQ,EAAC,YAAY,QAAQ,UAAU,GAAE;AAAA,IAC3C;AAEA,aAAS;AAAA,EACX;AAEA,SAAO,CAAC,SAAS;AACf,UAAM,MAAM,WAAW,CAAC,MAAM,OAAO,WAAW;AAC9C,UACE,YAAY,IAAI,KAChB,YAAY,MAAM,IAAI,KACtB,GAAG,MAAM,OAAO,MAAM,GACtB;AACA,eAAO,OAAO,MAAM,OAAO,MAAM;AAAA,MACnC;AAAA,IACF,CAAC;AAAA,EACH;AAGA,WAAS,OAAO,MAAM;AACpB,SAAK,SAAS,aAAa,YAAY,YAAY,MAAM;AAAA,MACvD,OAAO,UAAM,cAAAA,SAAO,MAAM,CAAC,GAAG,KAAK,GAAG,WAAW,SAAS,IAAI,CAAC;AAAA,IACjE;AAEA,WAAO,CAAC,IAAI;AAAA,EACd;AAGA,WAAS,OAAO,MAAM,OAAO,QAAQ;AAGnC,QAAI,OAAO,UAAU,YAAY,CAAC;AAAQ;AAE1C,UAAM,OAAO;AAAA,MACX;AAAA,UACA,cAAAA,SAAO,MAAM,CAAC,GAAG,KAAK;AAAA,MACtB,WAAW,SAAS,IAAI;AAAA,IAC1B;AACA,QAAI,QAAQ,aAAa,WAAW,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI;AAE9D,QAAI,OAAO;AACT,YAAM,WAAW,OAAO,OAAO,IAAI;AAEnC,UAAI,YAAY,CAAC,MAAM,QAAQ,QAAQ,KAAK,SAAS,SAAS,WAAW;AACvE,iBAAS,WAAW;AACpB,gBAAQ,CAAC,QAAQ;AAAA,MACnB;AAAA,IACF;AAEA,WAAO,SAAS,OAAO,OAAO,GAAG,GAAG,KAAK;AAEzC,WAAO,CAAC,MAAM,QAAQ,MAAM,MAAM;AAAA,EACpC;AAGA,WAAS,KAAK,MAAM;AAClB,SAAK,WAAW,CAAC,OAAO,UAAM,cAAAA,SAAO,MAAM,CAAC,GAAG,KAAK,GAAG,KAAK,QAAQ,CAAC;AACrE,WAAO,CAAC,IAAI;AAAA,EACd;AAOA,WAAS,WAAW,OAAO,MAAM;AAC/B,UAAM,SAAS,OAAO,OAAO,IAAI;AACjC,WAAO,MAAM,QAAQ,MAAM,IAAI,SAAS,CAAC,MAAM;AAAA,EACjD;AAOA,WAAS,OAAO,OAAO,MAAM;AAC3B,QAAI,OAAO,UAAU;AAAY,aAAO,MAAM,IAAI;AAClD,eAAO,cAAAA,SAAO,MAAM,MAAM,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK;AAAA,EAC3D;AAQA,WAAS,OAAO,MAAMC,QAAO,UAAU;AACrC,WAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,MACT,YAAY,OAAO,OAAO,CAAC,GAAGA,QAAO;AAAA;AAAA;AAAA,QAGnC,MAAM,OAAO,KAAK,cAAc,CAAC,GAAG;AAAA,MACtC,CAAC;AAAA,MACD;AAAA,IACF;AAAA,EACF;AACF;",
  "names": ["extend", "props"]
}
