{
  "version": 3,
  "sources": ["../../@fullcalendar/resource/internal-common.js", "../../@fullcalendar/resource/index.js"],
  "sourcesContent": ["import { refineProps, guid, parseBusinessHours, createEventUi, identity, parseClassNames, EventImpl, Splitter, parseFieldSpecs, BaseComponent, memoizeObjArg, ViewContextType, ContentContainer, formatDayString, memoize, NowTimer, TableDateCell, TableDowCell, computeFallbackHeaderFormat, mapHash, flexibleCompare, compareByFieldSpecs } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment } from '@fullcalendar/core/preact.js';\n\nconst PRIVATE_ID_PREFIX = '_fc:';\nconst RESOURCE_REFINERS = {\n    id: String,\n    parentId: String,\n    children: identity,\n    title: String,\n    businessHours: identity,\n    extendedProps: identity,\n    // event-ui\n    eventEditable: Boolean,\n    eventStartEditable: Boolean,\n    eventDurationEditable: Boolean,\n    eventConstraint: identity,\n    eventOverlap: Boolean,\n    eventAllow: identity,\n    eventClassNames: parseClassNames,\n    eventBackgroundColor: String,\n    eventBorderColor: String,\n    eventTextColor: String,\n    eventColor: String,\n};\n/*\nneeds a full store so that it can populate children too\n*/\nfunction parseResource(raw, parentId = '', store, context) {\n    let { refined, extra } = refineProps(raw, RESOURCE_REFINERS);\n    let resource = {\n        id: refined.id || (PRIVATE_ID_PREFIX + guid()),\n        parentId: refined.parentId || parentId,\n        title: refined.title || '',\n        businessHours: refined.businessHours ? parseBusinessHours(refined.businessHours, context) : null,\n        ui: createEventUi({\n            editable: refined.eventEditable,\n            startEditable: refined.eventStartEditable,\n            durationEditable: refined.eventDurationEditable,\n            constraint: refined.eventConstraint,\n            overlap: refined.eventOverlap,\n            allow: refined.eventAllow,\n            classNames: refined.eventClassNames,\n            backgroundColor: refined.eventBackgroundColor,\n            borderColor: refined.eventBorderColor,\n            textColor: refined.eventTextColor,\n            color: refined.eventColor,\n        }, context),\n        extendedProps: Object.assign(Object.assign({}, extra), refined.extendedProps),\n    };\n    // help out ResourceApi from having user modify props\n    Object.freeze(resource.ui.classNames);\n    Object.freeze(resource.extendedProps);\n    if (store[resource.id]) ;\n    else {\n        store[resource.id] = resource;\n        if (refined.children) {\n            for (let childInput of refined.children) {\n                parseResource(childInput, resource.id, store, context);\n            }\n        }\n    }\n    return resource;\n}\n/*\nTODO: use this in more places\n*/\nfunction getPublicId(id) {\n    if (id.indexOf(PRIVATE_ID_PREFIX) === 0) {\n        return '';\n    }\n    return id;\n}\n\nclass ResourceApi {\n    constructor(_context, _resource) {\n        this._context = _context;\n        this._resource = _resource;\n    }\n    setProp(name, value) {\n        let oldResource = this._resource;\n        this._context.dispatch({\n            type: 'SET_RESOURCE_PROP',\n            resourceId: oldResource.id,\n            propName: name,\n            propValue: value,\n        });\n        this.sync(oldResource);\n    }\n    setExtendedProp(name, value) {\n        let oldResource = this._resource;\n        this._context.dispatch({\n            type: 'SET_RESOURCE_EXTENDED_PROP',\n            resourceId: oldResource.id,\n            propName: name,\n            propValue: value,\n        });\n        this.sync(oldResource);\n    }\n    sync(oldResource) {\n        let context = this._context;\n        let resourceId = oldResource.id;\n        // TODO: what if dispatch didn't complete synchronously?\n        this._resource = context.getCurrentData().resourceStore[resourceId];\n        context.emitter.trigger('resourceChange', {\n            oldResource: new ResourceApi(context, oldResource),\n            resource: this,\n            revert() {\n                context.dispatch({\n                    type: 'ADD_RESOURCE',\n                    resourceHash: {\n                        [resourceId]: oldResource,\n                    },\n                });\n            },\n        });\n    }\n    remove() {\n        let context = this._context;\n        let internalResource = this._resource;\n        let resourceId = internalResource.id;\n        context.dispatch({\n            type: 'REMOVE_RESOURCE',\n            resourceId,\n        });\n        context.emitter.trigger('resourceRemove', {\n            resource: this,\n            revert() {\n                context.dispatch({\n                    type: 'ADD_RESOURCE',\n                    resourceHash: {\n                        [resourceId]: internalResource,\n                    },\n                });\n            },\n        });\n    }\n    getParent() {\n        let context = this._context;\n        let parentId = this._resource.parentId;\n        if (parentId) {\n            return new ResourceApi(context, context.getCurrentData().resourceStore[parentId]);\n        }\n        return null;\n    }\n    getChildren() {\n        let thisResourceId = this._resource.id;\n        let context = this._context;\n        let { resourceStore } = context.getCurrentData();\n        let childApis = [];\n        for (let resourceId in resourceStore) {\n            if (resourceStore[resourceId].parentId === thisResourceId) {\n                childApis.push(new ResourceApi(context, resourceStore[resourceId]));\n            }\n        }\n        return childApis;\n    }\n    /*\n    this is really inefficient!\n    TODO: make EventApi::resourceIds a hash or keep an index in the Calendar's state\n    */\n    getEvents() {\n        let thisResourceId = this._resource.id;\n        let context = this._context;\n        let { defs, instances } = context.getCurrentData().eventStore;\n        let eventApis = [];\n        for (let instanceId in instances) {\n            let instance = instances[instanceId];\n            let def = defs[instance.defId];\n            if (def.resourceIds.indexOf(thisResourceId) !== -1) { // inefficient!!!\n                eventApis.push(new EventImpl(context, def, instance));\n            }\n        }\n        return eventApis;\n    }\n    get id() { return getPublicId(this._resource.id); }\n    get title() { return this._resource.title; }\n    get eventConstraint() { return this._resource.ui.constraints[0] || null; } // TODO: better type\n    get eventOverlap() { return this._resource.ui.overlap; }\n    get eventAllow() { return this._resource.ui.allows[0] || null; } // TODO: better type\n    get eventBackgroundColor() { return this._resource.ui.backgroundColor; }\n    get eventBorderColor() { return this._resource.ui.borderColor; }\n    get eventTextColor() { return this._resource.ui.textColor; }\n    // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n    get eventClassNames() { return this._resource.ui.classNames; }\n    get extendedProps() { return this._resource.extendedProps; }\n    toPlainObject(settings = {}) {\n        let internal = this._resource;\n        let { ui } = internal;\n        let publicId = this.id;\n        let res = {};\n        if (publicId) {\n            res.id = publicId;\n        }\n        if (internal.title) {\n            res.title = internal.title;\n        }\n        if (settings.collapseEventColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {\n            res.eventColor = ui.backgroundColor;\n        }\n        else {\n            if (ui.backgroundColor) {\n                res.eventBackgroundColor = ui.backgroundColor;\n            }\n            if (ui.borderColor) {\n                res.eventBorderColor = ui.borderColor;\n            }\n        }\n        if (ui.textColor) {\n            res.eventTextColor = ui.textColor;\n        }\n        if (ui.classNames.length) {\n            res.eventClassNames = ui.classNames;\n        }\n        if (Object.keys(internal.extendedProps).length) {\n            if (settings.collapseExtendedProps) {\n                Object.assign(res, internal.extendedProps);\n            }\n            else {\n                res.extendedProps = internal.extendedProps;\n            }\n        }\n        return res;\n    }\n    toJSON() {\n        return this.toPlainObject();\n    }\n}\nfunction buildResourceApis(resourceStore, context) {\n    let resourceApis = [];\n    for (let resourceId in resourceStore) {\n        resourceApis.push(new ResourceApi(context, resourceStore[resourceId]));\n    }\n    return resourceApis;\n}\n\n/*\nsplits things BASED OFF OF which resources they are associated with.\ncreates a '' entry which is when something has NO resource.\n*/\nclass ResourceSplitter extends Splitter {\n    getKeyInfo(props) {\n        return Object.assign({ '': {} }, props.resourceStore);\n    }\n    getKeysForDateSpan(dateSpan) {\n        return [dateSpan.resourceId || ''];\n    }\n    getKeysForEventDef(eventDef) {\n        let resourceIds = eventDef.resourceIds;\n        if (!resourceIds.length) {\n            return [''];\n        }\n        return resourceIds;\n    }\n}\n\nconst DEFAULT_RESOURCE_ORDER = parseFieldSpecs('id,title');\nfunction handleResourceStore(resourceStore, calendarData) {\n    let { emitter } = calendarData;\n    if (emitter.hasHandlers('resourcesSet')) {\n        emitter.trigger('resourcesSet', buildResourceApis(resourceStore, calendarData));\n    }\n}\n\nfunction refineRenderProps$1(input) {\n    return {\n        resource: new ResourceApi(input.context, input.resource),\n    };\n}\n\n// TODO: not used for Spreadsheet. START USING. difficult because of col-specific rendering props\nclass ResourceLabelContainer extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.refineRenderProps = memoizeObjArg(refineRenderProps);\n    }\n    render() {\n        const { props } = this;\n        return (createElement(ViewContextType.Consumer, null, (context) => {\n            let { options } = context;\n            let renderProps = this.refineRenderProps({\n                resource: props.resource,\n                date: props.date,\n                context,\n            });\n            return (createElement(ContentContainer, Object.assign({}, props, { elAttrs: Object.assign(Object.assign({}, props.elAttrs), { 'data-resource-id': props.resource.id, 'data-date': props.date ? formatDayString(props.date) : undefined }), renderProps: renderProps, generatorName: \"resourceLabelContent\", customGenerator: options.resourceLabelContent, defaultGenerator: renderInnerContent, classNameGenerator: options.resourceLabelClassNames, didMount: options.resourceLabelDidMount, willUnmount: options.resourceLabelWillUnmount })));\n        }));\n    }\n}\nfunction renderInnerContent(props) {\n    return props.resource.title || props.resource.id;\n}\nfunction refineRenderProps(input) {\n    return {\n        resource: new ResourceApi(input.context, input.resource),\n        date: input.date ? input.context.dateEnv.toDate(input.date) : null,\n        view: input.context.viewApi,\n    };\n}\n\nclass ResourceCell extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(ResourceLabelContainer, { elTag: \"th\", elClasses: ['fc-col-header-cell', 'fc-resource'], elAttrs: {\n                role: 'columnheader',\n                colSpan: props.colSpan,\n            }, resource: props.resource, date: props.date }, (InnerContent) => (createElement(\"div\", { className: \"fc-scrollgrid-sync-inner\" },\n            createElement(InnerContent, { elTag: \"span\", elClasses: [\n                    'fc-col-header-cell-cushion',\n                    props.isSticky && 'fc-sticky',\n                ] })))));\n    }\n}\n\nclass ResourceDayHeader extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.buildDateFormat = memoize(buildDateFormat);\n    }\n    render() {\n        let { props, context } = this;\n        let dateFormat = this.buildDateFormat(context.options.dayHeaderFormat, props.datesRepDistinctDays, props.dates.length);\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => {\n            if (props.dates.length === 1) {\n                return this.renderResourceRow(props.resources, props.dates[0]);\n            }\n            if (context.options.datesAboveResources) {\n                return this.renderDayAndResourceRows(props.dates, dateFormat, todayRange, props.resources);\n            }\n            return this.renderResourceAndDayRows(props.resources, props.dates, dateFormat, todayRange);\n        }));\n    }\n    renderResourceRow(resources, date) {\n        let resourceCells = resources.map((resource) => (createElement(ResourceCell, { key: resource.id, resource: resource, colSpan: 1, date: date })));\n        return this.buildTr(resourceCells, 'resources');\n    }\n    renderDayAndResourceRows(dates, dateFormat, todayRange, resources) {\n        let dateCells = [];\n        let resourceCells = [];\n        for (let date of dates) {\n            dateCells.push(this.renderDateCell(date, dateFormat, todayRange, resources.length, null, true));\n            for (let resource of resources) {\n                resourceCells.push(createElement(ResourceCell, { key: resource.id + ':' + date.toISOString(), resource: resource, colSpan: 1, date: date }));\n            }\n        }\n        return (createElement(Fragment, null,\n            this.buildTr(dateCells, 'day'),\n            this.buildTr(resourceCells, 'resources')));\n    }\n    renderResourceAndDayRows(resources, dates, dateFormat, todayRange) {\n        let resourceCells = [];\n        let dateCells = [];\n        for (let resource of resources) {\n            resourceCells.push(createElement(ResourceCell, { key: resource.id, resource: resource, colSpan: dates.length, isSticky: true }));\n            for (let date of dates) {\n                dateCells.push(this.renderDateCell(date, dateFormat, todayRange, 1, resource));\n            }\n        }\n        return (createElement(Fragment, null,\n            this.buildTr(resourceCells, 'resources'),\n            this.buildTr(dateCells, 'day')));\n    }\n    // a cell with date text. might have a resource associated with it\n    renderDateCell(date, dateFormat, todayRange, colSpan, resource, isSticky) {\n        let { props } = this;\n        let keyPostfix = resource ? `:${resource.id}` : '';\n        let extraRenderProps = resource ? { resource: new ResourceApi(this.context, resource) } : {};\n        let extraDataAttrs = resource ? { 'data-resource-id': resource.id } : {};\n        return props.datesRepDistinctDays ? (createElement(TableDateCell, { key: date.toISOString() + keyPostfix, date: date, dateProfile: props.dateProfile, todayRange: todayRange, colCnt: props.dates.length * props.resources.length, dayHeaderFormat: dateFormat, colSpan: colSpan, isSticky: isSticky, extraRenderProps: extraRenderProps, extraDataAttrs: extraDataAttrs })) : (createElement(TableDowCell // we can't leverage the pure-componentness becausae the extra* props are new every time :(\n        , { key: date.getUTCDay() + keyPostfix, dow: date.getUTCDay(), dayHeaderFormat: dateFormat, colSpan: colSpan, isSticky: isSticky, extraRenderProps: extraRenderProps, extraDataAttrs: extraDataAttrs }));\n    }\n    buildTr(cells, key) {\n        let { renderIntro } = this.props;\n        if (!cells.length) {\n            cells = [createElement(\"td\", { key: 0 }, \"\\u00A0\")];\n        }\n        return (createElement(\"tr\", { key: key, role: \"row\" },\n            renderIntro && renderIntro(key),\n            cells));\n    }\n}\nfunction buildDateFormat(dayHeaderFormat, datesRepDistinctDays, dayCnt) {\n    return dayHeaderFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt);\n}\n\nclass ResourceIndex {\n    constructor(resources) {\n        let indicesById = {};\n        let ids = [];\n        for (let i = 0; i < resources.length; i += 1) {\n            let id = resources[i].id;\n            ids.push(id);\n            indicesById[id] = i;\n        }\n        this.ids = ids;\n        this.indicesById = indicesById;\n        this.length = resources.length;\n    }\n}\n\nclass AbstractResourceDayTableModel {\n    constructor(dayTableModel, resources, context) {\n        this.dayTableModel = dayTableModel;\n        this.resources = resources;\n        this.context = context;\n        this.resourceIndex = new ResourceIndex(resources);\n        this.rowCnt = dayTableModel.rowCnt;\n        this.colCnt = dayTableModel.colCnt * resources.length;\n        this.cells = this.buildCells();\n    }\n    buildCells() {\n        let { rowCnt, dayTableModel, resources } = this;\n        let rows = [];\n        for (let row = 0; row < rowCnt; row += 1) {\n            let rowCells = [];\n            for (let dateCol = 0; dateCol < dayTableModel.colCnt; dateCol += 1) {\n                for (let resourceCol = 0; resourceCol < resources.length; resourceCol += 1) {\n                    let resource = resources[resourceCol];\n                    let extraRenderProps = { resource: new ResourceApi(this.context, resource) };\n                    let extraDataAttrs = { 'data-resource-id': resource.id };\n                    let extraClassNames = ['fc-resource'];\n                    let extraDateSpan = { resourceId: resource.id };\n                    let date = dayTableModel.cells[row][dateCol].date;\n                    rowCells[this.computeCol(dateCol, resourceCol)] = {\n                        key: resource.id + ':' + date.toISOString(),\n                        date,\n                        extraRenderProps,\n                        extraDataAttrs,\n                        extraClassNames,\n                        extraDateSpan,\n                    };\n                }\n            }\n            rows.push(rowCells);\n        }\n        return rows;\n    }\n}\n\n/*\nresources over dates\n*/\nclass ResourceDayTableModel extends AbstractResourceDayTableModel {\n    computeCol(dateI, resourceI) {\n        return resourceI * this.dayTableModel.colCnt + dateI;\n    }\n    /*\n    all date ranges are intact\n    */\n    computeColRanges(dateStartI, dateEndI, resourceI) {\n        return [\n            {\n                firstCol: this.computeCol(dateStartI, resourceI),\n                lastCol: this.computeCol(dateEndI, resourceI),\n                isStart: true,\n                isEnd: true,\n            },\n        ];\n    }\n}\n\n/*\ndates over resources\n*/\nclass DayResourceTableModel extends AbstractResourceDayTableModel {\n    computeCol(dateI, resourceI) {\n        return dateI * this.resources.length + resourceI;\n    }\n    /*\n    every single day is broken up\n    */\n    computeColRanges(dateStartI, dateEndI, resourceI) {\n        let segs = [];\n        for (let i = dateStartI; i <= dateEndI; i += 1) {\n            let col = this.computeCol(i, resourceI);\n            segs.push({\n                firstCol: col,\n                lastCol: col,\n                isStart: i === dateStartI,\n                isEnd: i === dateEndI,\n            });\n        }\n        return segs;\n    }\n}\n\nconst NO_SEGS = []; // for memoizing\nclass VResourceJoiner {\n    constructor() {\n        this.joinDateSelection = memoize(this.joinSegs);\n        this.joinBusinessHours = memoize(this.joinSegs);\n        this.joinFgEvents = memoize(this.joinSegs);\n        this.joinBgEvents = memoize(this.joinSegs);\n        this.joinEventDrags = memoize(this.joinInteractions);\n        this.joinEventResizes = memoize(this.joinInteractions);\n    }\n    /*\n    propSets also has a '' key for things with no resource\n    */\n    joinProps(propSets, resourceDayTable) {\n        let dateSelectionSets = [];\n        let businessHoursSets = [];\n        let fgEventSets = [];\n        let bgEventSets = [];\n        let eventDrags = [];\n        let eventResizes = [];\n        let eventSelection = '';\n        let keys = resourceDayTable.resourceIndex.ids.concat(['']); // add in the all-resource key\n        for (let key of keys) {\n            let props = propSets[key];\n            dateSelectionSets.push(props.dateSelectionSegs);\n            businessHoursSets.push(key ? props.businessHourSegs : NO_SEGS); // don't include redundant all-resource businesshours\n            fgEventSets.push(key ? props.fgEventSegs : NO_SEGS); // don't include fg all-resource segs\n            bgEventSets.push(props.bgEventSegs);\n            eventDrags.push(props.eventDrag);\n            eventResizes.push(props.eventResize);\n            eventSelection = eventSelection || props.eventSelection;\n        }\n        return {\n            dateSelectionSegs: this.joinDateSelection(resourceDayTable, ...dateSelectionSets),\n            businessHourSegs: this.joinBusinessHours(resourceDayTable, ...businessHoursSets),\n            fgEventSegs: this.joinFgEvents(resourceDayTable, ...fgEventSets),\n            bgEventSegs: this.joinBgEvents(resourceDayTable, ...bgEventSets),\n            eventDrag: this.joinEventDrags(resourceDayTable, ...eventDrags),\n            eventResize: this.joinEventResizes(resourceDayTable, ...eventResizes),\n            eventSelection,\n        };\n    }\n    joinSegs(resourceDayTable, ...segGroups) {\n        let resourceCnt = resourceDayTable.resources.length;\n        let transformedSegs = [];\n        for (let i = 0; i < resourceCnt; i += 1) {\n            for (let seg of segGroups[i]) {\n                transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n            }\n            for (let seg of segGroups[resourceCnt]) { // one beyond. the all-resource\n                transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n            }\n        }\n        return transformedSegs;\n    }\n    /*\n    for expanding non-resource segs to all resources.\n    only for public use.\n    no memoizing.\n    */\n    expandSegs(resourceDayTable, segs) {\n        let resourceCnt = resourceDayTable.resources.length;\n        let transformedSegs = [];\n        for (let i = 0; i < resourceCnt; i += 1) {\n            for (let seg of segs) {\n                transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n            }\n        }\n        return transformedSegs;\n    }\n    joinInteractions(resourceDayTable, ...interactions) {\n        let resourceCnt = resourceDayTable.resources.length;\n        let affectedInstances = {};\n        let transformedSegs = [];\n        let anyInteractions = false;\n        let isEvent = false;\n        for (let i = 0; i < resourceCnt; i += 1) {\n            let interaction = interactions[i];\n            if (interaction) {\n                anyInteractions = true;\n                for (let seg of interaction.segs) {\n                    transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n                }\n                Object.assign(affectedInstances, interaction.affectedInstances);\n                isEvent = isEvent || interaction.isEvent;\n            }\n            if (interactions[resourceCnt]) { // one beyond. the all-resource\n                for (let seg of interactions[resourceCnt].segs) {\n                    transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n                }\n            }\n        }\n        if (anyInteractions) {\n            return {\n                affectedInstances,\n                segs: transformedSegs,\n                isEvent,\n            };\n        }\n        return null;\n    }\n}\n\n/*\nTODO: just use ResourceHash somehow? could then use the generic ResourceSplitter\n*/\nclass VResourceSplitter extends Splitter {\n    getKeyInfo(props) {\n        let { resourceDayTableModel } = props;\n        let hash = mapHash(resourceDayTableModel.resourceIndex.indicesById, (i) => resourceDayTableModel.resources[i]); // :(\n        hash[''] = {};\n        return hash;\n    }\n    getKeysForDateSpan(dateSpan) {\n        return [dateSpan.resourceId || ''];\n    }\n    getKeysForEventDef(eventDef) {\n        let resourceIds = eventDef.resourceIds;\n        if (!resourceIds.length) {\n            return [''];\n        }\n        return resourceIds;\n    }\n}\n\n/*\ndoesn't accept grouping\n*/\nfunction flattenResources(resourceStore, orderSpecs) {\n    return buildRowNodes(resourceStore, [], orderSpecs, false, {}, true)\n        .map((node) => node.resource);\n}\nfunction buildRowNodes(resourceStore, groupSpecs, orderSpecs, isVGrouping, expansions, expansionDefault) {\n    let complexNodes = buildHierarchy(resourceStore, isVGrouping ? -1 : 1, groupSpecs, orderSpecs);\n    let flatNodes = [];\n    flattenNodes(complexNodes, flatNodes, isVGrouping, [], 0, expansions, expansionDefault);\n    return flatNodes;\n}\nfunction flattenNodes(complexNodes, res, isVGrouping, rowSpans, depth, expansions, expansionDefault) {\n    for (let i = 0; i < complexNodes.length; i += 1) {\n        let complexNode = complexNodes[i];\n        let group = complexNode.group;\n        if (group) {\n            if (isVGrouping) {\n                let firstRowIndex = res.length;\n                let rowSpanIndex = rowSpans.length;\n                flattenNodes(complexNode.children, res, isVGrouping, rowSpans.concat(0), depth, expansions, expansionDefault);\n                if (firstRowIndex < res.length) {\n                    let firstRow = res[firstRowIndex];\n                    let firstRowSpans = firstRow.rowSpans = firstRow.rowSpans.slice();\n                    firstRowSpans[rowSpanIndex] = res.length - firstRowIndex;\n                }\n            }\n            else {\n                let id = group.spec.field + ':' + group.value;\n                let isExpanded = expansions[id] != null ? expansions[id] : expansionDefault;\n                res.push({ id, group, isExpanded });\n                if (isExpanded) {\n                    flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n                }\n            }\n        }\n        else if (complexNode.resource) {\n            let id = complexNode.resource.id;\n            let isExpanded = expansions[id] != null ? expansions[id] : expansionDefault;\n            res.push({\n                id,\n                rowSpans,\n                depth,\n                isExpanded,\n                hasChildren: Boolean(complexNode.children.length),\n                resource: complexNode.resource,\n                resourceFields: complexNode.resourceFields,\n            });\n            if (isExpanded) {\n                flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n            }\n        }\n    }\n}\nfunction buildHierarchy(resourceStore, maxDepth, groupSpecs, orderSpecs) {\n    let resourceNodes = buildResourceNodes(resourceStore, orderSpecs);\n    let builtNodes = [];\n    for (let resourceId in resourceNodes) {\n        let resourceNode = resourceNodes[resourceId];\n        if (!resourceNode.resource.parentId) {\n            insertResourceNode(resourceNode, builtNodes, groupSpecs, 0, maxDepth, orderSpecs);\n        }\n    }\n    return builtNodes;\n}\nfunction buildResourceNodes(resourceStore, orderSpecs) {\n    let nodeHash = {};\n    for (let resourceId in resourceStore) {\n        let resource = resourceStore[resourceId];\n        nodeHash[resourceId] = {\n            resource,\n            resourceFields: buildResourceFields(resource),\n            children: [],\n        };\n    }\n    for (let resourceId in resourceStore) {\n        let resource = resourceStore[resourceId];\n        if (resource.parentId) {\n            let parentNode = nodeHash[resource.parentId];\n            if (parentNode) {\n                insertResourceNodeInSiblings(nodeHash[resourceId], parentNode.children, orderSpecs);\n            }\n        }\n    }\n    return nodeHash;\n}\nfunction insertResourceNode(resourceNode, nodes, groupSpecs, depth, maxDepth, orderSpecs) {\n    if (groupSpecs.length && (maxDepth === -1 || depth <= maxDepth)) {\n        let groupNode = ensureGroupNodes(resourceNode, nodes, groupSpecs[0]);\n        insertResourceNode(resourceNode, groupNode.children, groupSpecs.slice(1), depth + 1, maxDepth, orderSpecs);\n    }\n    else {\n        insertResourceNodeInSiblings(resourceNode, nodes, orderSpecs);\n    }\n}\nfunction ensureGroupNodes(resourceNode, nodes, groupSpec) {\n    let groupValue = resourceNode.resourceFields[groupSpec.field];\n    let groupNode;\n    let newGroupIndex;\n    // find an existing group that matches, or determine the position for a new group\n    if (groupSpec.order) {\n        for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex += 1) {\n            let node = nodes[newGroupIndex];\n            if (node.group) {\n                let cmp = flexibleCompare(groupValue, node.group.value) * groupSpec.order;\n                if (cmp === 0) {\n                    groupNode = node;\n                    break;\n                }\n                else if (cmp < 0) {\n                    break;\n                }\n            }\n        }\n    }\n    else { // the groups are unordered\n        for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex += 1) {\n            let node = nodes[newGroupIndex];\n            if (node.group && groupValue === node.group.value) {\n                groupNode = node;\n                break;\n            }\n        }\n    }\n    if (!groupNode) {\n        groupNode = {\n            group: {\n                value: groupValue,\n                spec: groupSpec,\n            },\n            children: [],\n        };\n        nodes.splice(newGroupIndex, 0, groupNode);\n    }\n    return groupNode;\n}\nfunction insertResourceNodeInSiblings(resourceNode, siblings, orderSpecs) {\n    let i;\n    for (i = 0; i < siblings.length; i += 1) {\n        let cmp = compareByFieldSpecs(siblings[i].resourceFields, resourceNode.resourceFields, orderSpecs); // TODO: pass in ResourceApi?\n        if (cmp > 0) { // went 1 past. insert at i\n            break;\n        }\n    }\n    siblings.splice(i, 0, resourceNode);\n}\nfunction buildResourceFields(resource) {\n    let obj = Object.assign(Object.assign(Object.assign({}, resource.extendedProps), resource.ui), resource);\n    delete obj.ui;\n    delete obj.extendedProps;\n    return obj;\n}\nfunction isGroupsEqual(group0, group1) {\n    return group0.spec === group1.spec && group0.value === group1.value;\n}\n\nexport { AbstractResourceDayTableModel as A, DEFAULT_RESOURCE_ORDER as D, ResourceApi as R, VResourceJoiner as V, ResourceSplitter as a, ResourceDayHeader as b, ResourceDayTableModel as c, DayResourceTableModel as d, VResourceSplitter as e, flattenResources as f, getPublicId as g, handleResourceStore as h, isGroupsEqual as i, buildRowNodes as j, buildResourceFields as k, ResourceLabelContainer as l, parseResource as p, refineRenderProps$1 as r };\n", "import { createPlugin } from '@fullcalendar/core/index.js';\nimport premiumCommonPlugin from '@fullcalendar/premium-common/index.js';\nimport { memoize, filterHash, rangesIntersect, isPropsEqual, mapHash, combineEventUis, refineProps, guid, identity, rangesEqual, CalendarImpl, mergeEventStores, isPropsValid, parseFieldSpecs, EventImpl, unpromisify, requestJson } from '@fullcalendar/core/internal.js';\nimport { p as parseResource, R as ResourceApi, a as ResourceSplitter, h as handleResourceStore } from './internal-common.js';\nexport { R as ResourceApi } from './internal-common.js';\nimport '@fullcalendar/core/preact.js';\n\nfunction massageEventDragMutation(eventMutation, hit0, hit1) {\n    let resource0 = hit0.dateSpan.resourceId;\n    let resource1 = hit1.dateSpan.resourceId;\n    if (resource0 && resource1 &&\n        resource0 !== resource1) {\n        eventMutation.resourceMutation = {\n            matchResourceId: resource0,\n            setResourceId: resource1,\n        };\n    }\n}\n/*\nTODO: all this would be much easier if we were using a hash!\n*/\nfunction applyEventDefMutation(eventDef, mutation, context) {\n    let resourceMutation = mutation.resourceMutation;\n    if (resourceMutation && computeResourceEditable(eventDef, context)) {\n        let index = eventDef.resourceIds.indexOf(resourceMutation.matchResourceId);\n        if (index !== -1) {\n            let resourceIds = eventDef.resourceIds.slice(); // copy\n            resourceIds.splice(index, 1); // remove\n            if (resourceIds.indexOf(resourceMutation.setResourceId) === -1) { // not already in there\n                resourceIds.push(resourceMutation.setResourceId); // add\n            }\n            eventDef.resourceIds = resourceIds;\n        }\n    }\n}\n/*\nHACK\nTODO: use EventUi system instead of this\n*/\nfunction computeResourceEditable(eventDef, context) {\n    let { resourceEditable } = eventDef;\n    if (resourceEditable == null) {\n        let source = eventDef.sourceId && context.getCurrentData().eventSources[eventDef.sourceId];\n        if (source) {\n            resourceEditable = source.extendedProps.resourceEditable; // used the Source::extendedProps hack\n        }\n        if (resourceEditable == null) {\n            resourceEditable = context.options.eventResourceEditable;\n            if (resourceEditable == null) {\n                resourceEditable = context.options.editable; // TODO: use defaults system instead\n            }\n        }\n    }\n    return resourceEditable;\n}\nfunction transformEventDrop(mutation, context) {\n    let { resourceMutation } = mutation;\n    if (resourceMutation) {\n        let { calendarApi } = context;\n        return {\n            oldResource: calendarApi.getResourceById(resourceMutation.matchResourceId),\n            newResource: calendarApi.getResourceById(resourceMutation.setResourceId),\n        };\n    }\n    return {\n        oldResource: null,\n        newResource: null,\n    };\n}\n\nclass ResourceDataAdder {\n    constructor() {\n        this.filterResources = memoize(filterResources);\n    }\n    transform(viewProps, calendarProps) {\n        if (calendarProps.viewSpec.optionDefaults.needsResourceData) {\n            return {\n                resourceStore: this.filterResources(calendarProps.resourceStore, calendarProps.options.filterResourcesWithEvents, calendarProps.eventStore, calendarProps.dateProfile.activeRange),\n                resourceEntityExpansions: calendarProps.resourceEntityExpansions,\n            };\n        }\n        return null;\n    }\n}\nfunction filterResources(resourceStore, doFilterResourcesWithEvents, eventStore, activeRange) {\n    if (doFilterResourcesWithEvents) {\n        let instancesInRange = filterEventInstancesInRange(eventStore.instances, activeRange);\n        let hasEvents = computeHasEvents(instancesInRange, eventStore.defs);\n        Object.assign(hasEvents, computeAncestorHasEvents(hasEvents, resourceStore));\n        return filterHash(resourceStore, (resource, resourceId) => hasEvents[resourceId]);\n    }\n    return resourceStore;\n}\nfunction filterEventInstancesInRange(eventInstances, activeRange) {\n    return filterHash(eventInstances, (eventInstance) => rangesIntersect(eventInstance.range, activeRange));\n}\nfunction computeHasEvents(eventInstances, eventDefs) {\n    let hasEvents = {};\n    for (let instanceId in eventInstances) {\n        let instance = eventInstances[instanceId];\n        for (let resourceId of eventDefs[instance.defId].resourceIds) {\n            hasEvents[resourceId] = true;\n        }\n    }\n    return hasEvents;\n}\n/*\nmark resources as having events if any of their ancestors have them\nNOTE: resourceStore might not have all the resources that hasEvents{} has keyed\n*/\nfunction computeAncestorHasEvents(hasEvents, resourceStore) {\n    let res = {};\n    for (let resourceId in hasEvents) {\n        let resource;\n        while ((resource = resourceStore[resourceId])) {\n            resourceId = resource.parentId; // now functioning as the parentId\n            if (resourceId) {\n                res[resourceId] = true;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return res;\n}\n/*\nfor making sure events that have editable resources are always draggable in resource views\n*/\nfunction transformIsDraggable(val, eventDef, eventUi, context) {\n    if (!val) {\n        let state = context.getCurrentData();\n        let viewSpec = state.viewSpecs[state.currentViewType];\n        if (viewSpec.optionDefaults.needsResourceData) {\n            if (computeResourceEditable(eventDef, context)) {\n                return true;\n            }\n        }\n    }\n    return val;\n}\n\n// for when non-resource view should be given EventUi info (for event coloring/constraints based off of resource data)\nclass ResourceEventConfigAdder {\n    constructor() {\n        this.buildResourceEventUis = memoize(buildResourceEventUis, isPropsEqual);\n        this.injectResourceEventUis = memoize(injectResourceEventUis);\n    }\n    transform(viewProps, calendarProps) {\n        if (!calendarProps.viewSpec.optionDefaults.needsResourceData) {\n            return {\n                eventUiBases: this.injectResourceEventUis(viewProps.eventUiBases, viewProps.eventStore.defs, this.buildResourceEventUis(calendarProps.resourceStore)),\n            };\n        }\n        return null;\n    }\n}\nfunction buildResourceEventUis(resourceStore) {\n    return mapHash(resourceStore, (resource) => resource.ui);\n}\nfunction injectResourceEventUis(eventUiBases, eventDefs, resourceEventUis) {\n    return mapHash(eventUiBases, (eventUi, defId) => {\n        if (defId) { // not the '' key\n            return injectResourceEventUi(eventUi, eventDefs[defId], resourceEventUis);\n        }\n        return eventUi;\n    });\n}\nfunction injectResourceEventUi(origEventUi, eventDef, resourceEventUis) {\n    let parts = [];\n    // first resource takes precedence, which fights with the ordering of combineEventUis, thus the unshifts\n    for (let resourceId of eventDef.resourceIds) {\n        if (resourceEventUis[resourceId]) {\n            parts.unshift(resourceEventUis[resourceId]);\n        }\n    }\n    parts.unshift(origEventUi);\n    return combineEventUis(parts);\n}\n\nlet defs = []; // TODO: use plugin system\nfunction registerResourceSourceDef(def) {\n    defs.push(def);\n}\nfunction getResourceSourceDef(id) {\n    return defs[id];\n}\nfunction getResourceSourceDefs() {\n    return defs;\n}\n\n// TODO: make this a plugin-able parser\n// TODO: success/failure\nconst RESOURCE_SOURCE_REFINERS = {\n    id: String,\n    // for array. TODO: move to resource-array\n    resources: identity,\n    // for json feed. TODO: move to resource-json-feed\n    url: String,\n    method: String,\n    startParam: String,\n    endParam: String,\n    timeZoneParam: String,\n    extraParams: identity,\n};\nfunction parseResourceSource(input) {\n    let inputObj;\n    if (typeof input === 'string') {\n        inputObj = { url: input };\n    }\n    else if (typeof input === 'function' || Array.isArray(input)) {\n        inputObj = { resources: input };\n    }\n    else if (typeof input === 'object' && input) { // non-null object\n        inputObj = input;\n    }\n    if (inputObj) {\n        let { refined, extra } = refineProps(inputObj, RESOURCE_SOURCE_REFINERS);\n        warnUnknownProps(extra);\n        let metaRes = buildResourceSourceMeta(refined);\n        if (metaRes) {\n            return {\n                _raw: input,\n                sourceId: guid(),\n                sourceDefId: metaRes.sourceDefId,\n                meta: metaRes.meta,\n                publicId: refined.id || '',\n                isFetching: false,\n                latestFetchId: '',\n                fetchRange: null,\n            };\n        }\n    }\n    return null;\n}\nfunction buildResourceSourceMeta(refined) {\n    let defs = getResourceSourceDefs();\n    for (let i = defs.length - 1; i >= 0; i -= 1) { // later-added plugins take precedence\n        let def = defs[i];\n        let meta = def.parseMeta(refined);\n        if (meta) {\n            return { meta, sourceDefId: i };\n        }\n    }\n    return null;\n}\nfunction warnUnknownProps(props) {\n    for (let propName in props) {\n        console.warn(`Unknown resource prop '${propName}'`);\n    }\n}\n\nfunction reduceResourceSource(source, action, context) {\n    let { options, dateProfile } = context;\n    if (!source || !action) {\n        return createSource(options.initialResources || options.resources, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n    }\n    switch (action.type) {\n        case 'RESET_RESOURCE_SOURCE':\n            return createSource(action.resourceSourceInput, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n        case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n        case 'NEXT':\n        case 'CHANGE_DATE':\n        case 'CHANGE_VIEW_TYPE':\n            return handleRangeChange(source, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n        case 'RECEIVE_RESOURCES':\n        case 'RECEIVE_RESOURCE_ERROR':\n            return receiveResponse(source, action.fetchId, action.fetchRange);\n        case 'REFETCH_RESOURCES':\n            return fetchSource(source, dateProfile.activeRange, context);\n        default:\n            return source;\n    }\n}\nfunction createSource(input, activeRange, refetchResourcesOnNavigate, context) {\n    if (input) {\n        let source = parseResourceSource(input);\n        source = fetchSource(source, refetchResourcesOnNavigate ? activeRange : null, context);\n        return source;\n    }\n    return null;\n}\nfunction handleRangeChange(source, activeRange, refetchResourcesOnNavigate, context) {\n    if (refetchResourcesOnNavigate &&\n        !doesSourceIgnoreRange(source) &&\n        (!source.fetchRange || !rangesEqual(source.fetchRange, activeRange))) {\n        return fetchSource(source, activeRange, context);\n    }\n    return source;\n}\nfunction doesSourceIgnoreRange(source) {\n    return Boolean(getResourceSourceDef(source.sourceDefId).ignoreRange);\n}\nfunction fetchSource(source, fetchRange, context) {\n    let sourceDef = getResourceSourceDef(source.sourceDefId);\n    let fetchId = guid();\n    sourceDef.fetch({\n        resourceSource: source,\n        range: fetchRange,\n        context,\n    }, (res) => {\n        context.dispatch({\n            type: 'RECEIVE_RESOURCES',\n            fetchId,\n            fetchRange,\n            rawResources: res.rawResources,\n        });\n    }, (error) => {\n        context.dispatch({\n            type: 'RECEIVE_RESOURCE_ERROR',\n            fetchId,\n            fetchRange,\n            error,\n        });\n    });\n    return Object.assign(Object.assign({}, source), { isFetching: true, latestFetchId: fetchId });\n}\nfunction receiveResponse(source, fetchId, fetchRange) {\n    if (fetchId === source.latestFetchId) {\n        return Object.assign(Object.assign({}, source), { isFetching: false, fetchRange });\n    }\n    return source;\n}\n\nfunction reduceResourceStore(store, action, source, context) {\n    if (!store || !action) {\n        return {};\n    }\n    switch (action.type) {\n        case 'RECEIVE_RESOURCES':\n            return receiveRawResources(store, action.rawResources, action.fetchId, source, context);\n        case 'ADD_RESOURCE':\n            return addResource(store, action.resourceHash);\n        case 'REMOVE_RESOURCE':\n            return removeResource(store, action.resourceId);\n        case 'SET_RESOURCE_PROP':\n            return setResourceProp(store, action.resourceId, action.propName, action.propValue);\n        case 'SET_RESOURCE_EXTENDED_PROP':\n            return setResourceExtendedProp(store, action.resourceId, action.propName, action.propValue);\n        default:\n            return store;\n    }\n}\nfunction receiveRawResources(existingStore, inputs, fetchId, source, context) {\n    if (source.latestFetchId === fetchId) {\n        let nextStore = {};\n        for (let input of inputs) {\n            parseResource(input, '', nextStore, context);\n        }\n        return nextStore;\n    }\n    return existingStore;\n}\nfunction addResource(existingStore, additions) {\n    // TODO: warn about duplicate IDs\n    return Object.assign(Object.assign({}, existingStore), additions);\n}\nfunction removeResource(existingStore, resourceId) {\n    let newStore = Object.assign({}, existingStore);\n    delete newStore[resourceId];\n    // promote children\n    for (let childResourceId in newStore) { // a child, *maybe* but probably not\n        if (newStore[childResourceId].parentId === resourceId) {\n            newStore[childResourceId] = Object.assign(Object.assign({}, newStore[childResourceId]), { parentId: '' });\n        }\n    }\n    return newStore;\n}\nfunction setResourceProp(existingStore, resourceId, name, value) {\n    let existingResource = existingStore[resourceId];\n    // TODO: sanitization\n    if (existingResource) {\n        return Object.assign(Object.assign({}, existingStore), { [resourceId]: Object.assign(Object.assign({}, existingResource), { [name]: value }) });\n    }\n    return existingStore;\n}\nfunction setResourceExtendedProp(existingStore, resourceId, name, value) {\n    let existingResource = existingStore[resourceId];\n    if (existingResource) {\n        return Object.assign(Object.assign({}, existingStore), { [resourceId]: Object.assign(Object.assign({}, existingResource), { extendedProps: Object.assign(Object.assign({}, existingResource.extendedProps), { [name]: value }) }) });\n    }\n    return existingStore;\n}\n\nfunction reduceResourceEntityExpansions(expansions, action) {\n    if (!expansions || !action) {\n        return {};\n    }\n    switch (action.type) {\n        case 'SET_RESOURCE_ENTITY_EXPANDED':\n            return Object.assign(Object.assign({}, expansions), { [action.id]: action.isExpanded });\n        default:\n            return expansions;\n    }\n}\n\nfunction reduceResources(state, action, context) {\n    let resourceSource = reduceResourceSource(state && state.resourceSource, action, context);\n    let resourceStore = reduceResourceStore(state && state.resourceStore, action, resourceSource, context);\n    let resourceEntityExpansions = reduceResourceEntityExpansions(state && state.resourceEntityExpansions, action);\n    return {\n        resourceSource,\n        resourceStore,\n        resourceEntityExpansions,\n    };\n}\n\nconst EVENT_REFINERS = {\n    resourceId: String,\n    resourceIds: identity,\n    resourceEditable: Boolean,\n};\nfunction generateEventDefResourceMembers(refined) {\n    return {\n        resourceIds: ensureStringArray(refined.resourceIds)\n            .concat(refined.resourceId ? [refined.resourceId] : []),\n        resourceEditable: refined.resourceEditable,\n    };\n}\nfunction ensureStringArray(items) {\n    return (items || []).map((item) => String(item));\n}\n\nfunction transformDateSelectionJoin(hit0, hit1) {\n    let resourceId0 = hit0.dateSpan.resourceId;\n    let resourceId1 = hit1.dateSpan.resourceId;\n    if (resourceId0 && resourceId1) {\n        return { resourceId: resourceId0 };\n    }\n    return null;\n}\n\nCalendarImpl.prototype.addResource = function (input, scrollTo = true) {\n    let currentState = this.getCurrentData();\n    let resourceHash;\n    let resource;\n    if (input instanceof ResourceApi) {\n        resource = input._resource;\n        resourceHash = { [resource.id]: resource };\n    }\n    else {\n        resourceHash = {};\n        resource = parseResource(input, '', resourceHash, currentState);\n    }\n    this.dispatch({\n        type: 'ADD_RESOURCE',\n        resourceHash,\n    });\n    if (scrollTo) {\n        // TODO: wait til dispatch completes somehow\n        this.trigger('_scrollRequest', { resourceId: resource.id });\n    }\n    let resourceApi = new ResourceApi(currentState, resource);\n    currentState.emitter.trigger('resourceAdd', {\n        resource: resourceApi,\n        revert: () => {\n            this.dispatch({\n                type: 'REMOVE_RESOURCE',\n                resourceId: resource.id,\n            });\n        },\n    });\n    return resourceApi;\n};\nCalendarImpl.prototype.getResourceById = function (id) {\n    id = String(id);\n    let currentState = this.getCurrentData(); // eslint-disable-line react/no-this-in-sfc\n    if (currentState.resourceStore) { // guard against calendar with no resource functionality\n        let rawResource = currentState.resourceStore[id];\n        if (rawResource) {\n            return new ResourceApi(currentState, rawResource);\n        }\n    }\n    return null;\n};\nCalendarImpl.prototype.getResources = function () {\n    let currentState = this.getCurrentData();\n    let { resourceStore } = currentState;\n    let resourceApis = [];\n    if (resourceStore) { // guard against calendar with no resource functionality\n        for (let resourceId in resourceStore) {\n            resourceApis.push(new ResourceApi(currentState, resourceStore[resourceId]));\n        }\n    }\n    return resourceApis;\n};\nCalendarImpl.prototype.getTopLevelResources = function () {\n    let currentState = this.getCurrentData();\n    let { resourceStore } = currentState;\n    let resourceApis = [];\n    if (resourceStore) { // guard against calendar with no resource functionality\n        for (let resourceId in resourceStore) {\n            if (!resourceStore[resourceId].parentId) {\n                resourceApis.push(new ResourceApi(currentState, resourceStore[resourceId]));\n            }\n        }\n    }\n    return resourceApis;\n};\nCalendarImpl.prototype.refetchResources = function () {\n    this.dispatch({\n        type: 'REFETCH_RESOURCES',\n    });\n};\nfunction transformDatePoint(dateSpan, context) {\n    return dateSpan.resourceId ?\n        { resource: context.calendarApi.getResourceById(dateSpan.resourceId) } :\n        {};\n}\nfunction transformDateSpan(dateSpan, context) {\n    return dateSpan.resourceId ?\n        { resource: context.calendarApi.getResourceById(dateSpan.resourceId) } :\n        {};\n}\n\nfunction isPropsValidWithResources(combinedProps, context) {\n    let splitter = new ResourceSplitter();\n    let sets = splitter.splitProps(Object.assign(Object.assign({}, combinedProps), { resourceStore: context.getCurrentData().resourceStore }));\n    for (let resourceId in sets) {\n        let props = sets[resourceId];\n        // merge in event data from the non-resource segment\n        if (resourceId && sets['']) { // current segment is not the non-resource one, and there IS a non-resource one\n            props = Object.assign(Object.assign({}, props), { eventStore: mergeEventStores(sets[''].eventStore, props.eventStore), eventUiBases: Object.assign(Object.assign({}, sets[''].eventUiBases), props.eventUiBases) });\n        }\n        if (!isPropsValid(props, context, { resourceId }, filterConfig.bind(null, resourceId))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction filterConfig(resourceId, config) {\n    return Object.assign(Object.assign({}, config), { constraints: filterConstraints(resourceId, config.constraints) });\n}\nfunction filterConstraints(resourceId, constraints) {\n    return constraints.map((constraint) => {\n        let defs = constraint.defs;\n        if (defs) { // we are dealing with an EventStore\n            // if any of the events define constraints to resources that are NOT this resource,\n            // then this resource is unconditionally prohibited, which is what a `false` value does.\n            for (let defId in defs) {\n                let resourceIds = defs[defId].resourceIds;\n                if (resourceIds.length && resourceIds.indexOf(resourceId) === -1) { // TODO: use a hash?!!! (for other reasons too)\n                    return false;\n                }\n            }\n        }\n        return constraint;\n    });\n}\n\nfunction transformExternalDef(dateSpan) {\n    return dateSpan.resourceId ?\n        { resourceId: dateSpan.resourceId } :\n        {};\n}\n\nconst optionChangeHandlers = {\n    resources: handleResources,\n};\nfunction handleResources(newSourceInput, context) {\n    let oldSourceInput = context.getCurrentData().resourceSource._raw;\n    if (oldSourceInput !== newSourceInput) {\n        context.dispatch({\n            type: 'RESET_RESOURCE_SOURCE',\n            resourceSourceInput: newSourceInput,\n        });\n    }\n}\n\nconst OPTION_REFINERS = {\n    initialResources: identity,\n    resources: identity,\n    eventResourceEditable: Boolean,\n    refetchResourcesOnNavigate: Boolean,\n    resourceOrder: parseFieldSpecs,\n    filterResourcesWithEvents: Boolean,\n    resourceGroupField: String,\n    resourceAreaWidth: identity,\n    resourceAreaColumns: identity,\n    resourcesInitiallyExpanded: Boolean,\n    datesAboveResources: Boolean,\n    needsResourceData: Boolean,\n    resourceAreaHeaderClassNames: identity,\n    resourceAreaHeaderContent: identity,\n    resourceAreaHeaderDidMount: identity,\n    resourceAreaHeaderWillUnmount: identity,\n    resourceGroupLabelClassNames: identity,\n    resourceGroupLabelContent: identity,\n    resourceGroupLabelDidMount: identity,\n    resourceGroupLabelWillUnmount: identity,\n    resourceLabelClassNames: identity,\n    resourceLabelContent: identity,\n    resourceLabelDidMount: identity,\n    resourceLabelWillUnmount: identity,\n    resourceLaneClassNames: identity,\n    resourceLaneContent: identity,\n    resourceLaneDidMount: identity,\n    resourceLaneWillUnmount: identity,\n    resourceGroupLaneClassNames: identity,\n    resourceGroupLaneContent: identity,\n    resourceGroupLaneDidMount: identity,\n    resourceGroupLaneWillUnmount: identity,\n};\nconst LISTENER_REFINERS = {\n    resourcesSet: identity,\n    resourceAdd: identity,\n    resourceChange: identity,\n    resourceRemove: identity,\n};\n\nEventImpl.prototype.getResources = function () {\n    let { calendarApi } = this._context;\n    return this._def.resourceIds.map((resourceId) => calendarApi.getResourceById(resourceId));\n};\nEventImpl.prototype.setResources = function (resources) {\n    let resourceIds = [];\n    // massage resources -> resourceIds\n    for (let resource of resources) {\n        let resourceId = null;\n        if (typeof resource === 'string') {\n            resourceId = resource;\n        }\n        else if (typeof resource === 'number') {\n            resourceId = String(resource);\n        }\n        else if (resource instanceof ResourceApi) {\n            resourceId = resource.id; // guaranteed to always have an ID. hmmm\n        }\n        else {\n            console.warn('unknown resource type: ' + resource);\n        }\n        if (resourceId) {\n            resourceIds.push(resourceId);\n        }\n    }\n    this.mutate({\n        standardProps: {\n            resourceIds,\n        },\n    });\n};\n\nregisterResourceSourceDef({\n    ignoreRange: true,\n    parseMeta(refined) {\n        if (Array.isArray(refined.resources)) {\n            return refined.resources;\n        }\n        return null;\n    },\n    fetch(arg, successCallback) {\n        successCallback({\n            rawResources: arg.resourceSource.meta,\n        });\n    },\n});\n\nregisterResourceSourceDef({\n    parseMeta(refined) {\n        if (typeof refined.resources === 'function') {\n            return refined.resources;\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const dateEnv = arg.context.dateEnv;\n        const func = arg.resourceSource.meta;\n        const publicArg = arg.range ? {\n            start: dateEnv.toDate(arg.range.start),\n            end: dateEnv.toDate(arg.range.end),\n            startStr: dateEnv.formatIso(arg.range.start),\n            endStr: dateEnv.formatIso(arg.range.end),\n            timeZone: dateEnv.timeZone,\n        } : {};\n        unpromisify(func.bind(null, publicArg), (rawResources) => successCallback({ rawResources }), errorCallback);\n    },\n});\n\nregisterResourceSourceDef({\n    parseMeta(refined) {\n        if (refined.url) {\n            return {\n                url: refined.url,\n                method: (refined.method || 'GET').toUpperCase(),\n                extraParams: refined.extraParams,\n            };\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const meta = arg.resourceSource.meta;\n        const requestParams = buildRequestParams(meta, arg.range, arg.context);\n        requestJson(meta.method, meta.url, requestParams).then(([rawResources, response]) => {\n            successCallback({ rawResources, response });\n        }, errorCallback);\n    },\n});\n// TODO: somehow consolidate with event json feed\nfunction buildRequestParams(meta, range, context) {\n    let { dateEnv, options } = context;\n    let startParam;\n    let endParam;\n    let timeZoneParam;\n    let customRequestParams;\n    let params = {};\n    if (range) {\n        startParam = meta.startParam;\n        if (startParam == null) {\n            startParam = options.startParam;\n        }\n        endParam = meta.endParam;\n        if (endParam == null) {\n            endParam = options.endParam;\n        }\n        timeZoneParam = meta.timeZoneParam;\n        if (timeZoneParam == null) {\n            timeZoneParam = options.timeZoneParam;\n        }\n        params[startParam] = dateEnv.formatIso(range.start);\n        params[endParam] = dateEnv.formatIso(range.end);\n        if (dateEnv.timeZone !== 'local') {\n            params[timeZoneParam] = dateEnv.timeZone;\n        }\n    }\n    // retrieve any outbound GET/POST data from the options\n    if (typeof meta.extraParams === 'function') {\n        // supplied as a function that returns a key/value object\n        customRequestParams = meta.extraParams();\n    }\n    else {\n        // probably supplied as a straight key/value object\n        customRequestParams = meta.extraParams || {};\n    }\n    Object.assign(params, customRequestParams);\n    return params;\n}\n\nvar index = createPlugin({\n    name: '@fullcalendar/resource',\n    premiumReleaseDate: '2024-07-12',\n    deps: [premiumCommonPlugin],\n    reducers: [reduceResources],\n    isLoadingFuncs: [\n        (state) => state.resourceSource && state.resourceSource.isFetching,\n    ],\n    eventRefiners: EVENT_REFINERS,\n    eventDefMemberAdders: [generateEventDefResourceMembers],\n    isDraggableTransformers: [transformIsDraggable],\n    eventDragMutationMassagers: [massageEventDragMutation],\n    eventDefMutationAppliers: [applyEventDefMutation],\n    dateSelectionTransformers: [transformDateSelectionJoin],\n    datePointTransforms: [transformDatePoint],\n    dateSpanTransforms: [transformDateSpan],\n    viewPropsTransformers: [ResourceDataAdder, ResourceEventConfigAdder],\n    isPropsValid: isPropsValidWithResources,\n    externalDefTransforms: [transformExternalDef],\n    eventDropTransformers: [transformEventDrop],\n    optionChangeHandlers,\n    optionRefiners: OPTION_REFINERS,\n    listenerRefiners: LISTENER_REFINERS,\n    propSetHandlers: { resourceStore: handleResourceStore },\n});\n\nexport { index as default };\n"],
  "mappings": "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",
  "names": ["defs", "index", "defs"]
}
